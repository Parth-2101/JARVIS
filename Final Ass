{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "ae4bcd33-ac95-4322-9bf4-efe8bd7150ea",
      "metadata": {
        "trusted": true
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "from sklearn.feature_extraction.text import CountVectorizer\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.naive_bayes import MultinomialNB\n",
        "from sklearn.metrics import accuracy_score\n",
        "import pickle\n",
        "\n",
        "data = {'text': ['Send Email', 'Create List', 'Set Reminder', 'Search Google', 'Hello Jarvis', \n",
        "                 'send email', 'mind to send a mail?', 'compose a mail', \n",
        "                 'remind me', 'give me a heads up', 'create a reminder', \n",
        "                 'Search Google for', 'Can you search Google for', 'Jarvis search Google for', \n",
        "                 'Good morning', 'Good afternoon', 'Good evening'], \n",
        "        'intent': ['Send Email', 'Create List', 'Set Reminder', 'Search Google', 'Greetings', \n",
        "                  'Send Email', 'Send Email', 'Send Email', \n",
        "                  'Set Reminder', 'Set Reminder', 'Set Reminder', \n",
        "                  'Search Google', 'Search Google', 'Search Google', \n",
        "                  'Greetings', 'Greetings', 'Greetings']}\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "df['text'] = df['text'].str.lower()\n",
        "\n",
        "vectorizer = CountVectorizer()\n",
        "X = vectorizer.fit_transform(df['text'])\n",
        "y = df['intent']\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "model = MultinomialNB()\n",
        "model.fit(X_train, y_train)\n",
        "\n",
        "y_pred = model.predict(X_test)\n",
        "accuracy = accuracy_score(y_test, y_pred)\n",
        "print(f\"Accuracy: {accuracy}\")\n",
        "\n",
        "with open('saved_model.pkl', 'wb') as file:\n",
        "    pickle.dump(model, file)\n",
        "    pickle.dump(vectorizer, file)  # Save the vectorizer as well\n",
        "\n",
        "with open('saved_model.pkl', 'rb') as file:\n",
        "    loaded_model = pickle.load(file)\n",
        "    loaded_vectorizer = pickle.load(file)\n",
        "\n",
        "new_phrase = \"Can you please send an email?\"\n",
        "new_phrase_vec = loaded_vectorizer.transform([new_phrase])\n",
        "predicted_intent = loaded_model.predict(new_phrase_vec)\n",
        "print(f\"Predicted Intent: {predicted_intent[0]}\")\n"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python (Pyodide)",
      "language": "python",
      "name": "python"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "python",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
